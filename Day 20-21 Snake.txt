
from snake import Snake
from food import Food
from scoore import Scoore
from turtle import Screen, Turtle
import time

screen=Screen()
screen.setup(500,500)
screen.bgcolor("black")
screen.title("Snake")
screen.tracer(0)

snake=Snake()
food=Food()
scoore=Scoore()

screen.listen()
screen.onkey(snake.up,"Up")
screen.onkey(snake.down,"Down")
screen.onkey(snake.right,"Right")
screen.onkey(snake.left,"Left")

game=True
while game: 
	screen.update()
	time.sleep(0.2)
	snake.move()
	
	if(snake.parts[0].distance(food)<15):
	    food.newfood()
	    snake.big()
	    scoore.newscoore()
	    
	    
	if(snake.parts[0].xcor>220 or snake.parts[0].xcor<-220 or snake.parts[0].ycor>220 or snake.parts[0].ycor<-220):
	    food.gameover()
	    game=False
	
	for p1 in snake.p1[1:]:
	    
	   if(snake.parts[].distance(p1)<15)
	        food.gameover()
	        game=False
	    
screen.exitonclick()


#Snake file

distance=20
starter=[(0,0),(20,0),(40,0)]
from turtle import Screen, Turtle

class Snake:
    def __init__(self):
         self.parts=[] 
         self.create_snake()
         
    def create_snake(self):
        for i in starter:
	        self.adder(i)
	        
    	self.parts.append(p1)
    	
    def move(self):
        for i in range(len(parts),0,-1):
		    newx=self.parts[i-1].xcor()
	    	newy=self.parts[i-1].ycor(y)
	    	self.parts[i-1].goto(newx,newy)
    	self.parts[0].forward(distance)
    	
    def up(self):
        if(self.parts[0].heading()!=270):
            self.parts[0].setheading(90)
    
    def down(self):
        if(self.parts[0].heading()!=90):
            self.parts[0].setheading(270)
    
    def right(self)
        if(self.parts[0].heading()!=180):
            self.parts[0].setheading(0)
    
    def left(self):
        if(self.parts[0].heading()!=0):
            self.parts[0].setheading(180)

    def adder(self,i):
        p1=Turtle("square")
        p1.color("white")
    	p1.penup()
    	p1.goto(i)
        
            
    def big(self):
        self.adder(self.p1[-1].position())
    


#food class
from turtle import Turtle
import random
class Food(Turtle): 
    def __init__(self):
        super().__init__()
        self.shape("circle")
        self.penup()
        self.shapesize(0.5,0.5)
        self.color("red")
        self.speed("fastest")
        self.newfood()
        
    def newfood(self):
        x = random.randint(-200,200)
        y = random.randint(-200,200)
        self.goto(x,y)
        
        

#scoore class

from turtle import Turtle
class Scoore(Turtle): 
    def __init__(self):
        super().__init__()
        self.penup()
        self.color("white")
        self.goto(0,230)
        self.score=0
        self.update_s()
        
    def update_s(self):
        self.write(f"Score : {self.score}" , align="center", font=("Arial",24,"normal") )    
    
    def newscoore(self):
        self.score=self.score+1
        self.clear
        self.update_s()
    
    def gameover(self):
         self.write(f"GAME OVER" , align="center", font=("Arial",24,"normal") ) 